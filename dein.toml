
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_post_update = '''
  let g:quickrun_config = {'*': {'hook/time/enable': '1'},}
'''
hook_add = '''
  " https://qiita.com/uplus_e10/items/2a75fbe3d80063eb9c18
  let g:quickrun_config = get(g:, 'quickrun_config', {})
  let g:quickrun_config._ = {
      \ 'runner'    : 'vimproc',
      \ 'runner/vimproc/updatetime' : 60,
      \ 'outputter' : 'error',
      \ 'outputter/error/success' : 'buffer',
      \ 'outputter/error/error'   : 'quickfix',
      \ 'outputter/buffer/split'  : ':rightbelow 8sp',
      \ 'outputter/buffer/close_on_empty' : 1,
      \ 'hook/output_encode/enable' : 1,
      \ 'hook/output_encode/encoding' : 'cp932',
      \ }
  noremap <Leader>r :<C-u>QuickRun<CR>
'''
# https://qiita.com/daizutabi/items/8b0156eba0ce6f7e9b50

[[plugins]]
repo = 'cespare/vim-toml'


[[plugins]] 
repo = 'w0ng/vim-hybrid'
hook_add = '''
  set background=dark
  au MyAutoCmd VimEnter * nested colorscheme hybrid
  syntax on
  set t_Co=256
  " truecolor
  set termguicolors
  set background=dark
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  map <C-t> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_lint_on_text_changed = 0
  " let g:ale_sign_error = '?'
  " let g:ale_sign_warning = '?'
  let g:ale_sign_error = '!!'
  let g:ale_sign_warning = '--'
  let g:airline#extensions#ale#open_lnum_symbol = '('
  let g:airline#extensions#ale#close_lnum_symbol = ')'
  
  " Check Python files with flake8 and pylint.
  " let b:ale_linters = ['flake8', 'pylint']
  let b:ale_linters = {'python': ['flake8']}
  " Fix Python files with autopep8 and yapf.
  " let b:ale_fixers = {'python': ['autopep8', 'yapf']}
  let g:ale_fixers = {'python': ['autopep8', 'yapf']}
  
  
  let g:ale_echo_msg_format = '[%linter%]%code: %%s'
  highlight link ALEErrorSign Tag
  highlight link ALEWarningSign StorageClass
  nmap <silent> <C-k> <Plug>(ale_previous_wrap)
  nmap <silent> <C-j> <Plug>(ale_next_wrap)
'''

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

# https://qiita.com/okamos/items/4e1665ecd416ef77df7c
# [[plugins]]
# repo = 'nixprime/cpsm'
# build = 'env PY3=ON ./install.sh'

# [[plugins]]
# repo = 'kana/vim-smartinput'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]] # Nvim-R
repo = 'jalvesaq/Nvim-R'

# [[plugins]]
# repo = 'junegunn/fzf'
# build = './install --bin'
# merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
set rtp+=~/.fzf

noremap <Leader>f :<C-u>Files<CR>
noremap <Leader>l :<C-u>Lines<CR>
noremap <Leader>bl :<C-u>BLines<CR>
noremap <Leader>b :<C-u>Buffers<CR>
noremap <Leader>g :<C-u>Rg<CR>
noremap <Leader>h :<C-u>History<CR>

" https://qiita.com/masakuni-ito/items/84cb72b270fe54be259e
command! -bang -nargs=* Rgs
  \ call fzf#vim#grep(
  \   'rg --encoding Shift_JIS --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)

nnoremap <silent> <Leader>gs :<C-u>Rgs<CR>
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
" s{char}{char} to move to {char}{char}
map <leader>s <Plug>(easymotion-bd-f2)
nmap <leader>s <Plug>(easymotion-overwin-f2)
" Move to line
map <leader><leader>l <Plug>(easymotion-bd-jk)
nmap <leader><leader>l <Plug>(easymotion-overwin-line)
'''

[[plugins]]
repo = 'tpope/vim-commentary'


